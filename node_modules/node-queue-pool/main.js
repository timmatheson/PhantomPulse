/**
 * Created with JetBrains WebStorm.
 * User: kaven276
 * Date: 12-10-18
 * Time: 下午4:35
 */

function lasyLoad(path){
  var cache;
  return {
    get : function(){
      return cache || (cache = require('./lib/' + path + '.js').class);
    }, enumerable : true
  }
}

/* core */
var SuperQueue = require('./lib/SuperQueue.js').class;
module.exports = SuperQueue;


Object.defineProperties(SuperQueue, {
  ActionQueue : lasyLoad('ActionQueue'),

  /* queue types */
  PriorityQueue : lasyLoad('PriorityQueue'),

  /* cache types */
  BasicCache : lasyLoad('BasicCache'),

  /* limiters */
  Pauser : lasyLoad('Pauser'),
  Stater : lasyLoad('Stater'),
  Tracer : lasyLoad('Tracer'),
  Batcher : lasyLoad('Batcher'),
  ResultArray : lasyLoad('ResultArray'),
  ConcurrencyLimiter : lasyLoad('ConcurrencyLimiter'),
  ConcurrencyLimiterWeighted : lasyLoad('ConcurrencyLimiterWeighted'),
  OneByOne : lasyLoad('OneByOne'),
  RateLimiter : lasyLoad('RateLimiter'),
  RateLimiterWeighted : lasyLoad('RateLimiterWeighted'),
  PerGrpRateValve : lasyLoad('PerGrpRateValve'),
  DependOn : lasyLoad('DependOn')
});

